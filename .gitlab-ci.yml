stages:
  - subscribe
  - deploy
  - cleanup

ue_populate_10k_random:
  allow_failure: true
  stage: subscribe
  image: ubuntu:latest
  variables:
    REGION: us-east-1
    CLUSTER_NAME: cntf-open5gs-cluster
  environment: 
    name: open5gs_cluster
  before_script:
    - apt update
    - apt-get update && apt-get install -y curl unzip
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x kubectl
    - mv kubectl /usr/local/bin/
    - aws eks update-kubeconfig --name $CLUSTER_NAME --region $REGION
    - POPULATE_POD=$(kubectl -n openverso get pod --output=jsonpath={.items..metadata.name} -l app.kubernetes.io/component=populate)
    - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    - chmod +x get_helm.sh
    - ./get_helm.sh
  script: 
    - helm repo add openverso https://gradiant.github.io/openverso-charts/
    - sh ./10k_populate.sh

cleanup:
  image:
    name: alpine/helm
    entrypoint: [""]
  variables:
    REGION: us-east-1
    CLUSTER_NAME: cntf-open5gs-cluster
  stage: cleanup
  when: manual
  environment:
    name: open5gs_cluster
  script:
    - apk add --no-cache python3 py3-pip
    - pip3 install --upgrade pip
    - pip3 install --no-cache-dir awscli
    - aws --version
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x kubectl
    - mv kubectl /usr/local/bin/
    - aws eks update-kubeconfig --region $REGION --name $CLUSTER_NAME
    - helm repo add openverso https://gradiant.github.io/openverso-charts/
    - POPULATE_POD=$(kubectl -n openverso get pod --output=jsonpath={.items..metadata.name} -l app.kubernetes.io/component=populate)
    - kubectl -n openverso exec $POPULATE_POD -n openverso -- open5gs-dbctl reset


 
    
